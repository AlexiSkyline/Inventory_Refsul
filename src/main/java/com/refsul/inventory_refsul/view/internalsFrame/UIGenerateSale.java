/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.refsul.inventory_refsul.view.internalsFrame;

import com.refsul.inventory_refsul.controllers.*;
import com.refsul.inventory_refsul.models.*;
import com.refsul.inventory_refsul.repository.interfaces.ProductRepository;
import com.refsul.inventory_refsul.view.Home;
import com.refsul.inventory_refsul.view.validators.ItemForm;
import com.refsul.inventory_refsul.view.validators.validationOptions.NumberValidator;
import com.refsul.inventory_refsul.view.validators.validationOptions.RequiredValidator;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.*;

public class UIGenerateSale extends javax.swing.JInternalFrame {
    private Product product;

    private SalesController salesController;
    private CustomerController customerController;
    private SellerController sellerController;
    private ProductController productController;
    private PaymentMethodController paymentMethodController;
    private List<PaymentMethod> paymentMethodList;

    private int idCustomer;
    private int idSeller;
    private int idProduct;
    private int idPaymentMethod;

    private DefaultTableModel tableShoppingCart;
    private double price;
    private double totalPrice;
    private int quantityProduct;
    private static int lastIdItem;

    public UIGenerateSale() throws SQLException {
        initComponents();
        this.setResizable( false );

        this.salesController = new SalesController();
        this.customerController = new CustomerController();
        this.sellerController = new SellerController();
        this.productController = new ProductController();
        this.paymentMethodController = new PaymentMethodController();
        this.paymentMethodList = new ArrayList<>();

        this.getDateFromNow();
        this.generateFolio();
        this.showPaymentMethodList();

        this.idCustomer = 0;
        this.idSeller = 0;
        this.idProduct = 0;
        this.idPaymentMethod = 0;

        this.tableShoppingCart = new DefaultTableModel();
        this.lastIdItem = 0;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel01 = new javax.swing.JLabel();
        jLabel02 = new javax.swing.JLabel();
        jLabel03 = new javax.swing.JLabel();
        jLabel04 = new javax.swing.JLabel();
        jLabel05 = new javax.swing.JLabel();
        jLabel06 = new javax.swing.JLabel();
        jLabel07 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel08 = new javax.swing.JLabel();
        jTextIdCustomer = new javax.swing.JTextField();
        jButtonSearchCustomer = new javax.swing.JButton();
        jLabel09 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextIdSeller = new javax.swing.JTextField();
        jButtonSearchSeller = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextIdProduct = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButtonSearchProduct = new javax.swing.JButton();
        jTextPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jSpinnerQuantityProduct = new javax.swing.JSpinner();
        jButtonAddShoppingCart = new javax.swing.JButton();
        jButtonClean = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextCustomerName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextSellerName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextProductName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextStock = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableShoppingCart = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextFolio = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxPaymentMethods = new javax.swing.JComboBox<>();
        jButtonGenerateSale = new javax.swing.JButton();
        jButtonCancelSale = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LOGO44.gif"))); // NOI18N

        jLabel02.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel02.setText("Refaccionaria REFSUL");

        jLabel03.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel03.setText("Calidad y Servicio es nuestro compromiso");

        jLabel04.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel04.setText("Estamos Ubicados");

        jLabel05.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel05.setText("Av.Golondrinas, Sin Nombre, Teran,29050");

        jLabel06.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel06.setText("Servicios A Domicilio");

        jLabel07.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel07.setText("Tel: 961-272-96-38, 961-295-55-03, 961-607-85-56");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel01)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(jLabel03)
                        .addGap(65, 65, 65))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel07))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jLabel04))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jLabel05))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel06)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel02)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel02)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel03)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel04)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel05)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel06)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel07)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jLabel01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel08.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel08.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon (3).png"))); // NOI18N
        jLabel08.setText("Apartado de búsquedas.");

        jButtonSearchCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/buscar_cliente_btn.png"))); // NOI18N
        jButtonSearchCustomer.setText("Buscar Cliente");
        jButtonSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonSearchCustomerActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabel09.setText("ID del Cliente:");

        jLabel10.setText("ID del Vendedor:");

        jButtonSearchSeller.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/buscar_btn.png"))); // NOI18N
        jButtonSearchSeller.setText("Buscar Vendedor");
        jButtonSearchSeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonSearchSellerActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabel11.setText("ID del Producto:");

        jLabel12.setText("Precio del Producto:");

        jButtonSearchProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/buscar_producto_btn.png"))); // NOI18N
        jButtonSearchProduct.setText("Buscar Producto");
        jButtonSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonSearchProductActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jTextPrice.setEditable(false);

        jLabel13.setText("Cantidad:");

        jButtonAddShoppingCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/carrito-de-compras_btn.png"))); // NOI18N
        jButtonAddShoppingCart.setText("Agregar al Carrito");
        jButtonAddShoppingCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddShoppingCartActionPerformed(evt);
            }
        });

        jButtonClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clean.png"))); // NOI18N
        jButtonClean.setText("Limpiar");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel08)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel09)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerQuantityProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(jTextIdSeller)
                            .addComponent(jTextIdProduct)
                            .addComponent(jTextPrice)
                            .addComponent(jTextIdCustomer))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSearchCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSearchSeller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSearchProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddShoppingCart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel08, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel09)
                    .addComponent(jTextIdCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextIdSeller, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchSeller, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextIdProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAddShoppingCart, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerQuantityProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClean))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel14.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel14.setText("Información de las Búsquedas Realizadas");

        jLabel15.setText("Nombre Del Cliente:");

        jTextCustomerName.setEditable(false);

        jLabel16.setText("Nombre Vendedor:");

        jTextSellerName.setEditable(false);

        jLabel17.setText("Nombre del Producto:");

        jTextProductName.setEditable(false);

        jLabel18.setText("Productos Disponibles:");

        jTextStock.setEditable(false);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/buscando_info.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(jTextProductName)
                            .addComponent(jTextStock)
                            .addComponent(jTextSellerName)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel14)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextSellerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextStock, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/carrito-de-compras.png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel21.setText("Carrito de Compras");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel22.setText("Este es el apartado de checkout");

        jTableShoppingCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Orden", "IdProducto", "Producto", "Cantidad", "Precio Unit.", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableShoppingCart);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel21))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel22)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel22))
                    .addComponent(jLabel20))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel23.setText("Información de la compra a realizar");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel24.setText("Folio:");

        jTextFolio.setEditable(false);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel25.setText("Fecha:");

        jTextDate.setEditable(false);

        jLabel26.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel26.setText("Monto Total:");

        jTextTotal.setEditable(false);
        jTextTotal.setText("$0.0");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("Método de Pago:");

        jComboBoxPaymentMethods.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Método de pago" }));

        jButtonGenerateSale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bolsa-de-la-compra_btn.png"))); // NOI18N
        jButtonGenerateSale.setText("Generar Venta");
        jButtonGenerateSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonGenerateSaleActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonCancelSale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/quitar-del-carrito.png"))); // NOI18N
        jButtonCancelSale.setText("Cancelar Venta");
        jButtonCancelSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelSaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPaymentMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel25)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButtonGenerateSale)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelSale)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(100, 100, 100))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxPaymentMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerateSale, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelSale, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getDateFromNow()
    {
        Calendar date = new GregorianCalendar();
        this.jTextDate.setText( "" + date.get( date.YEAR ) + "/" + date.get( date.MONTH ) + "/" + date.get( date.DAY_OF_MONTH ) );
    }

    private void generateFolio() throws SQLException
    {
        String folio = this.salesController.getLastFolio();
        if( folio == null ) {
            this.jTextFolio.setText( "0000001" );
        } else {
            int increment = Integer.parseInt( folio );
            increment = increment + 1;
            jTextFolio.setText( "000000" + increment );
        }
    }

    private void showPaymentMethodList() throws SQLException
    {
        List<PaymentMethod> paymentMethodsDB = this.paymentMethodController.getPaymentMethods();
        this.paymentMethodList = paymentMethodsDB;
        paymentMethodsDB.forEach( e -> this.jComboBoxPaymentMethods.addItem( e.getDescription() ));
    }

    private void jButtonSearchCustomerActionPerformed( java.awt.event.ActionEvent evt ) throws SQLException
    {
        String idCustomer = this.jTextIdCustomer.getText();

        if( this.isValidCustomerInput() ) {
            Optional<Customer> findCustomer = this.customerController.getCustomerById( Integer.parseInt( idCustomer ) );
            if( findCustomer.isPresent() ){
                this.jTextCustomerName.setText( findCustomer.get().getPersonalInformation().getName() + " " + findCustomer.get().getPersonalInformation().getLastName() );
                this.idCustomer = findCustomer.get().getIdCustomer();
                this.jTextIdSeller.requestFocus();
            } else {
                int confirmDialog = JOptionPane.showConfirmDialog(this, "El cliente no Existe, Desea Registrarlo?", "Error al Buscar", JOptionPane.WARNING_MESSAGE );
                if( confirmDialog == 0 )
                {
                    UICustomer customer = new UICustomer();
                    Home.showWindows( customer );
                    customer.setVisible( true );
                }
            }
        }
    }

    private void jButtonSearchSellerActionPerformed( java.awt.event.ActionEvent evt ) throws SQLException
    {
        String idSeller = this.jTextIdSeller.getText();

        if( this.isValidSellerInput() ) {
            Optional<Seller> findSeller = this.sellerController.getSellerById( Integer.parseInt( idSeller ) );
            if( findSeller.isPresent() ){
                this.jTextSellerName.setText( findSeller.get().getPersonalInformation().getName() + " " + findSeller.get().getPersonalInformation().getLastName() );
                this.idSeller = findSeller.get().getIdSeller();
                this.jTextIdProduct.requestFocus();
            } else {
                int confirmDialog = JOptionPane.showConfirmDialog(this, "El Vendedor no Existe, Desea Registrarlo?", "Error al Buscar", JOptionPane.WARNING_MESSAGE );
                if( confirmDialog == 0 )
                {
                    UISeller seller = new UISeller();
                    Home.showWindows( seller );
                    seller.setVisible( true );
                }
            }
        }
    }

    private void jButtonSearchProductActionPerformed( java.awt.event.ActionEvent evt ) throws SQLException
    {
        String idProduct = this.jTextIdProduct.getText();

        if( this.isValidProductInput() ) {
            Optional<Product> findProduct = this.productController.getProductById( Integer.parseInt( idProduct ) );
            if( findProduct.isPresent() ){
                this.jTextProductName.setText( findProduct.get().getName() );
                this.jTextPrice.setText( "$" + findProduct.get().getPrice() );
                this.jTextStock.setText( findProduct.get().getStock() + " Unidades" );
                this.idProduct = findProduct.get().getIdProduct();
                this.product = findProduct.get();
                this.jSpinnerQuantityProduct.requestFocus();
            } else {
                int confirmDialog = JOptionPane.showConfirmDialog(this, "El Producto no Existe, Desea Registrarlo?", "Error al Buscar", JOptionPane.WARNING_MESSAGE );
                if( confirmDialog == 0 )
                {
                    UIProduct seller = new UIProduct();
                    Home.showWindows( seller );
                    seller.setVisible( true );
                }
            }
        }
    }

    private void jButtonAddShoppingCartActionPerformed( java.awt.event.ActionEvent evt )
    {
        if ( this.isValidQuantityProductInput() && this.isValidProductInput() ) {
            int stock = this.product.getStock();
            this.quantityProduct = ( int ) this.jSpinnerQuantityProduct.getValue();

            if( stock > 0 && this.quantityProduct > 0 && this.quantityProduct <= stock ) {
                this.cleanFieldProduct();
                this.tableShoppingCart = ( DefaultTableModel ) this.jTableShoppingCart.getModel();
                this.idProduct = this.product.getIdProduct();
                String productName = this.product.getName();
                this.price = this.product.getPrice();
                double total = this.quantityProduct * this.price;

                this.tableShoppingCart.addRow( new Object[]{++this.lastIdItem, this.idProduct, productName, this.quantityProduct, "$" + this.price, "$" + total } );
                this.calculateTotalPrice();
            } else {
                JOptionPane.showMessageDialog( this, "Error al agregar al carrito verifique la cantidad del Producto", "Error al agregar Producto", JOptionPane.WARNING_MESSAGE );
                this.jSpinnerQuantityProduct.requestFocus();
            }
        }
    }

    private void calculateTotalPrice()
    {
        this.totalPrice = 0;
        for( int i = 0; i < this.jTableShoppingCart.getRowCount(); i++ ) {
            String price = this.jTableShoppingCart.getValueAt( i, 5 ).toString().replace(  "$", "" );
            this.totalPrice += Double.parseDouble( price );

        }
        this.jTextTotal.setText( "$" + this.totalPrice );
    }

    private void jButtonCleanActionPerformed( java.awt.event.ActionEvent evt )
    {
        this.cleanFieldProduct();
    }

    private void jButtonGenerateSaleActionPerformed( java.awt.event.ActionEvent evt ) throws SQLException
    {
        if( this.isValidPaymentMethod() && this.isValidCustomerInput() && this.isValidSellerInput() && this.isValidShoppingCar() ) {
            boolean response = this.salesController.createSale( this.buildSale() );
            if( response ) {
                this.discountStockProducts();
                this.completeAddAction();
                JOptionPane.showMessageDialog( null, "Venta realizada correctamente",
                        "Venta realizada", JOptionPane.INFORMATION_MESSAGE );
            } else {
                JOptionPane.showMessageDialog( null, "Error al realizar una Venta",
                        "Error al Vender", JOptionPane.WARNING_MESSAGE );
            }
        }
    }

    private void jButtonCancelSaleActionPerformed( java.awt.event.ActionEvent evt )
    {
        this.cleanFields();
        this.cleanTableShoppingCart();
    }

    public Sales buildSale() {
        this.idPaymentMethod = this.paymentMethodList.get( this.jComboBoxPaymentMethods.getSelectedIndex() - 1 ).getIdPaymentMethod();

        Sales sales = new Sales();
        sales.setDate( this.jTextDate.getText() );
        sales.setFolio( this.jTextFolio.getText() );
        sales.setTotal( this.totalPrice );
        sales.setIdSeller( this.idSeller );
        sales.setIdCustomer( this.idCustomer );
        sales.setIdPaymentMethod( this.idPaymentMethod );

        return sales;
    }

    private boolean isValidCustomerInput()
    {
        String idCustomer = this.jTextIdCustomer.getText();
        ItemForm idCustomerItem = new ItemForm( "Id Cliente", idCustomer )
                .addValidador( new RequiredValidator() )
                .addValidador( new NumberValidator() );

        if( !idCustomerItem.isValid() ) {
            idCustomerItem.printMessage();
            this.jTextIdCustomer.requestFocus();
            return false;
        }
        return true;
    }

    private boolean isValidSellerInput()
    {
        String idSeller = this.jTextIdSeller.getText();
        ItemForm idSellerItem = new ItemForm( "Id Vendedor", idSeller )
                .addValidador( new RequiredValidator() )
                .addValidador( new NumberValidator() );

        if( !idSellerItem.isValid() ) {
            idSellerItem.printMessage();
            this.jTextIdSeller.requestFocus();
            return false;
        }
        return true;
    }

    private boolean isValidProductInput()
    {
        String idProduct = this.jTextIdProduct.getText();
        ItemForm idProductItem = new ItemForm( "Id Producto", idProduct )
                .addValidador( new RequiredValidator() )
                .addValidador( new NumberValidator() );

        if( !idProductItem.isValid() ) {
            idProductItem.printMessage();
            this.jTextIdProduct.requestFocus();
            return false;
        }
        return true;
    }

    private boolean isValidQuantityProductInput()
    {
        String idProduct = this.jSpinnerQuantityProduct.getValue().toString();
        ItemForm idProductItem = new ItemForm( "Cantidad Producto", idProduct )
                .addValidador( new RequiredValidator() )
                .addValidador( new NumberValidator() );

        if( !idProductItem.isValid() ) {
            idProductItem.printMessage();
            this.jSpinnerQuantityProduct.requestFocus();
            return false;
        }
        return true;
    }

    private boolean isValidPaymentMethod()
    {
        String idPaymentMethod = ( this.jComboBoxPaymentMethods.getSelectedIndex() == 0 ) ? "" : this.jComboBoxPaymentMethods.getSelectedItem().toString();
        ItemForm idPaymentMethodItem = new ItemForm( "Método de Pago", idPaymentMethod )
                .addValidador( new RequiredValidator() );

        if( !idPaymentMethodItem.isValid() ) {
            idPaymentMethodItem.printMessage();
            this.jComboBoxPaymentMethods.requestFocus();
            return false;
        }
        return true;
    }

    private boolean isValidShoppingCar()
    {
        if( this.jTableShoppingCart.getRowCount() == 0 ) {
            JOptionPane.showMessageDialog( null, "Agregue productos al Carrito", "Agregue Productos", JOptionPane.WARNING_MESSAGE );
            return false;
        }
        return true;
    }

    private void completeAddAction() throws SQLException
    {
        this.idCustomer = 0;
        this.idSeller = 0;
        this.idProduct = 0;
        this.idPaymentMethod = 0;

        this.cleanFields();
        this.cleanTableShoppingCart();
        this.generateFolio();
    }

    private void cleanFields()
    {
        this.jTextIdCustomer.setText( "" );
        this.jTextIdSeller.setText( "" );
        this.cleanFieldProduct();
        this.jTextCustomerName.setText( "" );
        this.jTextSellerName.setText( "" );
        this.jTextTotal.setText( "$0.0" );
        this.jComboBoxPaymentMethods.setSelectedItem( this.jComboBoxPaymentMethods.getItemAt( 0 ) );
    }

    private void cleanFieldProduct()
    {
        this.jTextIdProduct.setText( "" );
        this.jTextPrice.setText( "" );
        this.jSpinnerQuantityProduct.setValue( 0 );
        this.jTextProductName.setText( "" );
        this.jTextStock.setText( "" );
    }

    private void cleanTableShoppingCart()
    {
        for( int i = 0; i < this.tableShoppingCart.getRowCount(); i++ ) {
            this.tableShoppingCart.removeRow( i );
            i = i - 1;
        }
    }

    private void discountStockProducts() throws SQLException
    {
        for( int i = 0; i < this.jTableShoppingCart.getRowCount(); i++ ) {
            int idProduct = Integer.parseInt( this.jTableShoppingCart.getValueAt( i, 1 ).toString() );
            int quantity = Integer.parseInt( this.jTableShoppingCart.getValueAt( i, 3 ).toString() );
            Product product = this.productController.getProductById( idProduct ).get();
            int newQuantity = product.getStock() - quantity;
            this.productController.updateProductStock( idProduct, newQuantity );
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddShoppingCart;
    private javax.swing.JButton jButtonCancelSale;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonGenerateSale;
    private javax.swing.JButton jButtonSearchCustomer;
    private javax.swing.JButton jButtonSearchProduct;
    private javax.swing.JButton jButtonSearchSeller;
    private javax.swing.JComboBox<String> jComboBoxPaymentMethods;
    private javax.swing.JLabel jLabel01;
    private javax.swing.JLabel jLabel02;
    private javax.swing.JLabel jLabel03;
    private javax.swing.JLabel jLabel04;
    private javax.swing.JLabel jLabel05;
    private javax.swing.JLabel jLabel06;
    private javax.swing.JLabel jLabel07;
    private javax.swing.JLabel jLabel08;
    private javax.swing.JLabel jLabel09;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerQuantityProduct;
    private javax.swing.JTable jTableShoppingCart;
    public javax.swing.JTextField jTextCustomerName;
    private javax.swing.JTextField jTextDate;
    public javax.swing.JTextField jTextFolio;
    private javax.swing.JTextField jTextIdCustomer;
    private javax.swing.JTextField jTextIdProduct;
    private javax.swing.JTextField jTextIdSeller;
    private javax.swing.JTextField jTextPrice;
    public javax.swing.JTextField jTextProductName;
    private javax.swing.JTextField jTextSellerName;
    public javax.swing.JTextField jTextStock;
    private javax.swing.JTextField jTextTotal;
    // End of variables declaration//GEN-END:variables
}
